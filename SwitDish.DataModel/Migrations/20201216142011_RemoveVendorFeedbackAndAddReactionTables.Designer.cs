// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SwitDish.DataModel.Models;

namespace SwitDish.DataModel.Migrations
{
    [DbContext(typeof(SwitDishDbContext))]
    [Migration("20201216142011_RemoveVendorFeedbackAndAddReactionTables")]
    partial class RemoveVendorFeedbackAndAddReactionTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SwitDish.DataModel.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.AppNLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logger")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stacktrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Userid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AppNLogs");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.ApplicationUser", b =>
                {
                    b.Property<int>("ApplicationUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicationUserId");

                    b.HasIndex("AddressId");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.Cuisine", b =>
                {
                    b.Property<int>("CuisineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CuisineId");

                    b.ToTable("Cuisines");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.CustomerBooking", b =>
                {
                    b.Property<int>("CustomerBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("CustomerBookingId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("VendorId");

                    b.ToTable("CustomerBookings");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.CustomerDeliveryAddress", b =>
                {
                    b.Property<int>("CustomerDeliveryAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompleteAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerDeliveryAddressType")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instructions")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerDeliveryAddressId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerDeliveryAddresses");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.CustomerFavouriteVendor", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId", "VendorId");

                    b.HasIndex("VendorId");

                    b.ToTable("CustomerFavouriteVendors");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.CustomerOrder", b =>
                {
                    b.Property<int>("CustomerOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerDeliveryAddressId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeliveredOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DeliveryCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("EditedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RestaurantCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.Property<int?>("VendorOfferId")
                        .HasColumnType("int");

                    b.HasKey("CustomerOrderId");

                    b.HasIndex("CustomerDeliveryAddressId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("VendorId");

                    b.HasIndex("VendorOfferId");

                    b.ToTable("CustomerOrders");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.CustomerOrderFeedback", b =>
                {
                    b.Property<int>("CustomerOrderFeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AppRating")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerOrderId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryAgentComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeliveryAgentRating")
                        .HasColumnType("int");

                    b.Property<string>("FoodComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FoodRating")
                        .HasColumnType("int");

                    b.HasKey("CustomerOrderFeedbackId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("CustomerOrderId");

                    b.ToTable("CustomerOrderFeedbacks");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.CustomerOrderProduct", b =>
                {
                    b.Property<int>("CustomerOrderProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerOrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CustomerOrderProductId");

                    b.HasIndex("CustomerOrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("CustomerOrderProducts");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.CustomerSecurityQuestion", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("SecurityQuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId", "SecurityQuestionId");

                    b.HasIndex("SecurityQuestionId");

                    b.ToTable("CustomerSecurityQuestions");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.Feature", b =>
                {
                    b.Property<int>("FeatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FeatureId");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("VendorId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.ProductCategory", b =>
                {
                    b.Property<int>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductCategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.SecurityQuestion", b =>
                {
                    b.Property<int>("SecurityQuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SecurityQuestionId");

                    b.ToTable("SecurityQuestions");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.ServiceCategory", b =>
                {
                    b.Property<int>("ServiceCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServiceCategoryId");

                    b.ToTable("ServiceCategories");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.Vendor", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("AvatarImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DeliversFood")
                        .HasColumnType("bit");

                    b.Property<bool>("FreeDelivery")
                        .HasColumnType("bit");

                    b.Property<string>("MapLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondaryEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondaryPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VendorId");

                    b.HasIndex("AddressId");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.VendorCuisine", b =>
                {
                    b.Property<int>("VendorCuisineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CuisineId")
                        .HasColumnType("int");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("VendorCuisineId");

                    b.HasIndex("CuisineId");

                    b.HasIndex("VendorId");

                    b.ToTable("VendorCuisines");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.VendorDeliveryTime", b =>
                {
                    b.Property<int>("VendorDeliveryTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan>("Maximum")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("Minimum")
                        .HasColumnType("time");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("VendorDeliveryTimeId");

                    b.HasIndex("VendorId")
                        .IsUnique();

                    b.ToTable("VendorDeliveryTimes");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.VendorFeature", b =>
                {
                    b.Property<int>("VendorFeatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("VendorFeatureId");

                    b.HasIndex("FeatureId");

                    b.HasIndex("VendorId");

                    b.ToTable("VendorFeatures");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.VendorFeedbackReaction", b =>
                {
                    b.Property<int>("VendorFeedbackReactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerOrderFeedbackId")
                        .HasColumnType("int");

                    b.Property<int>("ReactionType")
                        .HasColumnType("int");

                    b.HasKey("VendorFeedbackReactionId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("CustomerOrderFeedbackId");

                    b.ToTable("VendorFeedbackReactions");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.VendorGalleryImage", b =>
                {
                    b.Property<int>("VendorGalleryImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("VendorGalleryImageId");

                    b.HasIndex("VendorId");

                    b.ToTable("VendorGalleryImages");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.VendorOffer", b =>
                {
                    b.Property<int>("VendorOfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OfferCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidTill")
                        .HasColumnType("datetime2");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("VendorOfferId");

                    b.HasIndex("VendorId");

                    b.ToTable("VendorOffers");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.VendorServiceCategory", b =>
                {
                    b.Property<int>("VendorServiceCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ServiceCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("VendorServiceCategoryId");

                    b.HasIndex("ServiceCategoryId");

                    b.HasIndex("VendorId");

                    b.ToTable("VendorServiceCategories");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.ApplicationUser", b =>
                {
                    b.HasOne("SwitDish.DataModel.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.Customer", b =>
                {
                    b.HasOne("SwitDish.DataModel.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.CustomerBooking", b =>
                {
                    b.HasOne("SwitDish.DataModel.Models.Customer", "Customer")
                        .WithMany("CustomerBookings")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SwitDish.DataModel.Models.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.CustomerDeliveryAddress", b =>
                {
                    b.HasOne("SwitDish.DataModel.Models.Customer", "Customer")
                        .WithMany("CustomerDeliveryAddresses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.CustomerFavouriteVendor", b =>
                {
                    b.HasOne("SwitDish.DataModel.Models.Customer", "Customer")
                        .WithMany("CustomerFavouriteVendors")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SwitDish.DataModel.Models.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.CustomerOrder", b =>
                {
                    b.HasOne("SwitDish.DataModel.Models.CustomerDeliveryAddress", "CustomerDeliveryAddress")
                        .WithMany()
                        .HasForeignKey("CustomerDeliveryAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SwitDish.DataModel.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SwitDish.DataModel.Models.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SwitDish.DataModel.Models.VendorOffer", "VendorOffer")
                        .WithMany()
                        .HasForeignKey("VendorOfferId");
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.CustomerOrderFeedback", b =>
                {
                    b.HasOne("SwitDish.DataModel.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SwitDish.DataModel.Models.CustomerOrder", "CustomerOrder")
                        .WithMany()
                        .HasForeignKey("CustomerOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.CustomerOrderProduct", b =>
                {
                    b.HasOne("SwitDish.DataModel.Models.CustomerOrder", "CustomerOrder")
                        .WithMany("CustomerOrderProducts")
                        .HasForeignKey("CustomerOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SwitDish.DataModel.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.CustomerSecurityQuestion", b =>
                {
                    b.HasOne("SwitDish.DataModel.Models.Customer", "Customer")
                        .WithMany("CustomerSecurityQuestions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SwitDish.DataModel.Models.SecurityQuestion", "SecurityQuestion")
                        .WithMany()
                        .HasForeignKey("SecurityQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.Product", b =>
                {
                    b.HasOne("SwitDish.DataModel.Models.ProductCategory", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SwitDish.DataModel.Models.Vendor", "Vendor")
                        .WithMany("Products")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.Vendor", b =>
                {
                    b.HasOne("SwitDish.DataModel.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.VendorCuisine", b =>
                {
                    b.HasOne("SwitDish.DataModel.Models.Cuisine", "Cuisine")
                        .WithMany()
                        .HasForeignKey("CuisineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SwitDish.DataModel.Models.Vendor", "Vendor")
                        .WithMany("VendorCuisines")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.VendorDeliveryTime", b =>
                {
                    b.HasOne("SwitDish.DataModel.Models.Vendor", "Vendor")
                        .WithOne("VendorDeliveryTime")
                        .HasForeignKey("SwitDish.DataModel.Models.VendorDeliveryTime", "VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.VendorFeature", b =>
                {
                    b.HasOne("SwitDish.DataModel.Models.Feature", "Feature")
                        .WithMany()
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SwitDish.DataModel.Models.Vendor", "Vendor")
                        .WithMany("VendorFeatures")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.VendorFeedbackReaction", b =>
                {
                    b.HasOne("SwitDish.DataModel.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SwitDish.DataModel.Models.CustomerOrderFeedback", "CustomerOrderFeedback")
                        .WithMany()
                        .HasForeignKey("CustomerOrderFeedbackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.VendorGalleryImage", b =>
                {
                    b.HasOne("SwitDish.DataModel.Models.Vendor", "Vendor")
                        .WithMany("VendorGalleryImages")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.VendorOffer", b =>
                {
                    b.HasOne("SwitDish.DataModel.Models.Vendor", "Vendor")
                        .WithMany("VendorOffers")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SwitDish.DataModel.Models.VendorServiceCategory", b =>
                {
                    b.HasOne("SwitDish.DataModel.Models.ServiceCategory", "ServiceCategory")
                        .WithMany()
                        .HasForeignKey("ServiceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SwitDish.DataModel.Models.Vendor", "Vendor")
                        .WithMany("VendorServiceCategories")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
